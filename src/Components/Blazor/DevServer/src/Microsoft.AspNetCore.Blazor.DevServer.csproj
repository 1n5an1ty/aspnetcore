<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <OutputType>Exe</OutputType>
    <AssemblyName>blazor-devserver</AssemblyName>
    <PackageId>Microsoft.AspNetCore.Blazor.DevServer</PackageId>
    <IsShippingPackage>true</IsShippingPackage>
    <HasReferenceAssembly>false</HasReferenceAssembly>
    <StartupObject>Microsoft.AspNetCore.Blazor.DevServer.Program</StartupObject>
    <Description>Development server for use when building Blazor applications.</Description>
    <!-- Set this to false because assemblies should not reference this assembly directly, (except for tests, of course). -->
    <IsProjectReferenceProvider>false</IsProjectReferenceProvider>

    <!-- This is so that we add the FrameworkReference to Microsoft.AspNetCore.App -->
    <UseLatestAspNetCoreReference>true</UseLatestAspNetCoreReference>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Extensions.CommandLineUtils.Sources" />
  </ItemGroup>

  <!-- References to Blazor projects are explicitly ProjectReferences, so that our reference resolution never tries to use the baseline -->
  <ItemGroup>
    <ProjectReference Include="..\..\Server\src\Microsoft.AspNetCore.Blazor.Server.csproj" />
  </ItemGroup>

  <!-- Pack settings -->
  <PropertyGroup>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);publish</GenerateNuspecDependsOn>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NuspecFile>Microsoft.AspNetCore.Blazor.DevServer.nuspec</NuspecFile>
  </PropertyGroup>

  <ItemGroup>
    <NuspecProperty Include="publishDir=$(PublishDir)" />
    <NuspecProperty Include="componentsrootdir=..\..\..\" />
    <NuspecProperty Include="blazorversion=$(PackageVersion)" />
  </ItemGroup>

</Project>
